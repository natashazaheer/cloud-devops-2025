version: "3.9"

networks:
  core:
    driver: bridge

volumes:
  jenkins_home:
  sonarqube_data:
  sonarqube_extensions:
  postgres_data:
  grafana_data:
  prometheus_data:

services:
  jenkins:
    image: jenkins/jenkins:lts
    user: root
    networks: [core]
    environment:
      - JENKINS_OPTS=--prefix=/jenkins
    volumes:
      - jenkins_home:/var/jenkins_home
    restart: unless-stopped

  postgres:
    image: postgres:15
    networks: [core]
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  sonarqube:
    image: sonarqube:community
    networks: [core]
    depends_on:
      - postgres
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      SONAR_WEB_CONTEXT: /sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    networks: [core]
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - prometheus_data:/etc/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    networks: [core]
    depends_on:
      - prometheus
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

  nginx:
    image: nginx:stable
    networks: [core]
    depends_on:
      - jenkins
      - sonarqube
      - grafana
    ports:
      - "80:80"
    volumes:
      - /opt/stack/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
